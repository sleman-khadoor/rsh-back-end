name: 'Admin Endpoints'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/admin/books
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Book Management'
      subgroupDescription: 'APIs for managing Books'
      title: 'Get all Books.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      'filter[title]':
        name: 'filter[title]'
        description: 'filter Books by name.'
        required: false
        example: non
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[ISBN]':
        name: 'filter[ISBN]'
        description: 'filter Books by ISBN.'
        required: false
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[EISBN]':
        name: 'filter[EISBN]'
        description: 'filter Books by EISBN.'
        required: false
        example: ad
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[author]':
        name: 'filter[author]'
        description: 'filter Books by author.'
        required: false
        example: blanditiis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'include[]':
        name: 'include[]'
        description: 'relations to load on the book'
        required: false
        example: "['bookCategories', 'formats', 'awards', 'reviews']"
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      page:
        name: page
        description: 'The page number'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      perPage:
        name: perPage
        description: 'Number of items pre page'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      'filter[title]': non
      'filter[ISBN]': dolorem
      'filter[EISBN]': ad
      'filter[author]': blanditiis
      'include[]': "['bookCategories', 'formats', 'awards', 'reviews']"
      page: 1
      perPage: 3
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":40,"title":{"ar":"\u0623\u0647\u0644\u0647\u0627 \u0627\u0644\u0631\u062c\u0644\u064a\u0646 \u0639\u0644\u0649 \u0627\u0644\u0634\u0627\u0637\u0626.","en":"Cum ipsa enim omnis odit."},"abstract":{"ar":"\u0627\u0628\u062a\u062f\u0627\u0621 \u0648\u0644\u0627 \u0623\u0628\u0627\u064b \u0648\u0644\u0627 \u0623\u0645\u0627\u064b \u0623\u0643\u062b\u0631 \u0645\u0646 \u0648\u0627\u062d\u062f\u061b \u0641\u0644\u0627\u062d\u062a \u0644\u0647 \u0635\u0648\u0631 \u0627\u0644\u0623\u062c\u0633\u0627\u0645 \u0639\u0644\u0649 \u0627\u062e\u062a\u0644\u0627\u0641\u0647\u0627 \u0648\u0647\u0648 \u0623\u0648\u0644 \u0645\u0627 \u062a\u062e\u0644\u0642 \u0645\u0646 \u062a\u0644\u0643 \u0627\u0644\u0642\u0648\u0649 \u0627\u0644\u062a\u064a \u0625\u0644\u0649 \u0627\u0644\u0623\u0644\u0623\u062a \u0627\u0644\u062c\u0633\u0645\u0627\u0646\u064a\u0629\u060c \u0648\u0642\u0648\u064a \u0641\u0639\u0644 \u0630\u0627\u062a\u0647 - \u0627\u0644\u062a\u064a \u0647\u064a \u0645\u0646\u0634\u0623 \u0627\u0644\u062a\u0643\u062b\u0631. \u0641\u0644\u0645\u0627 \u0623\u0639\u064a\u0627\u0647 \u0630\u0644\u0643 \u0648\u0646\u0638\u0631 \u0625\u0644\u0649 \u0630\u0644\u0643 \u0627\u0644\u0634\u064a\u0621 \u0627\u0644\u0630\u064a \u0628\u0647 \u0639\u0631\u0641 \u0627\u0644\u0645\u0648\u062c\u0648\u062f \u0627\u0644\u0648\u0627\u062c\u0628 \u0627\u0644\u0648\u062c\u0648\u062f\u060c \u0627\u0644\u0630\u064a \u0647\u0648 \u0623\u0648\u0644\u0647\u0627 \u0648\u0645\u0628\u062f\u0624\u0647\u0627 \u0648\u0633\u0628\u0628\u0647\u0627 \u0648\u0645\u0648\u062c\u062f\u0647\u0627\u060c \u0648\u0647\u0648 \u064a\u0639\u0637\u064a\u0647\u0627 \u0627\u0644\u062f\u0648\u0627\u0645 \u0648\u064a\u0645\u062f\u0647\u0627 \u0628\u0627\u0644\u0628\u0642\u0627\u0621 \u0648\u0627\u0644\u062a\u0633\u0631\u0645\u062f\u061b \u0648\u0644\u0627 \u062d\u0627\u062c\u0629 \u0628\u0647\u0627 \u0625\u0644\u0649 \u0645\u0627 \u064a\u062f\u0641\u0639 \u0628\u0647 \u0646\u0643\u064a\u0644\u0629 \u063a\u064a\u0631\u0647\u060c \u0648\u0627\u0644\u0649 \u0645\u0627 \u064a\u0646\u0643\u064a \u0628\u0647\u0627 \u063a\u064a\u0631\u0647. \u0648\u0643\u0630\u0644\u0643 \u0622\u0644\u0627\u062a \u0627\u0644\u0635\u064a\u062f \u062a\u0646\u0642\u0633\u0645: \u0625\u0644\u0649 \u0645\u0627 \u064a\u062f\u0641\u0639 \u0628\u0647 \u0646\u0643\u064a\u0644\u0629 \u063a\u064a\u0631\u0647\u060c \u0648\u0627\u0644\u0649 \u0645\u0627 \u064a\u0646\u0643\u064a \u0628\u0647\u0627 \u063a\u064a\u0631\u0647. \u0648\u0643\u0630\u0644\u0643 \u0622\u0644\u0627\u062a \u0627\u0644\u0635\u064a\u062f \u062a\u0646\u0642\u0633\u0645: \u0625\u0644\u0649 \u0645\u0627 \u0634\u0627\u0647\u062f\u0647 \u0641\u064a \u0645\u0642\u0627\u0645\u0647 \u0627\u0644\u0643\u0631\u064a\u0645. \u0641\u0639\u0644\u0645 \u0623\u0646 \u0627\u0644\u0630\u064a \u0647\u0648 \u0623\u0637\u0628\u0627\u0642\u0647 \u0628\u0646\u062d\u0648 \u0645\u0627 \u0627\u0639\u062a\u0628\u0631 \u0628\u0647 \u062d\u064a \u0628\u0646 \u064a\u0642\u0638\u0627\u0646 \u0623\u062b\u0631\u0647 \u0644\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0637\u0628\u0627\u0639\u0647 \u0645\u0646 \u0627\u0644\u062c\u0628\u0646 \u0639\u0646 \u0627\u0644\u0641\u0643\u0631\u0629 \u0648\u0627\u0644\u062a\u0635\u0631\u0641. \u0641\u0643\u0627\u0646\u062a \u0645\u0644\u0627\u0632\u0645\u062a\u0647 \u0627\u0644\u062c\u0645\u0627\u0639\u0629 \u0639\u0646\u062f\u0647 \u0645\u0645\u0627 \u064a\u062f\u0631\u0623 \u0627\u0644\u0648\u0633\u0648\u0627\u0633\u060c \u0648\u064a\u0632\u064a\u0644 \u0627\u0644\u0638\u0646\u0648\u0646 \u0627\u0644\u0645\u0639\u062a\u0631\u0636\u0629 \u0648\u064a\u0639\u064a\u062f \u0645\u0646 \u0647\u0645\u0632\u0627\u062a \u0627\u0644\u0634\u064a\u0627\u0637\u064a\u0646. \u0648\u0643\u0627\u0646 \u0627\u062e\u062a\u0644\u0627\u0641\u0647\u0645\u0627 \u0641\u064a \u0647\u0630\u0627 \u0627\u0644\u0645\u062b\u0627\u0644. \u0648\u0627\u0644\u0623\u062e\u0631: \u064a\u0642\u0648\u0645 \u0645\u0642\u0627\u0645 \u0637\u0648\u0644 \u0627\u0644\u0643\u0631\u0629 \u0648\u0639\u0631\u0636\u0647\u0627 \u0648\u0639\u0645\u0642\u0647\u0627\u060c \u0623\u0648 \u0627\u0644\u0645\u0643\u0639\u0628\u060c \u0623\u0648 \u0623\u064a \u0634\u0643\u0644 \u0643\u0627\u0646 \u0644\u0647. \u0648\u0627\u0646\u0647 \u0644\u0627 \u064a\u0641\u0647\u0645 \u062a\u0623\u062e\u0631 \u0627\u0644\u0639\u0627\u0644\u0645 \u0639\u0646 \u0627\u0644\u0632\u0645\u0627\u0646. \u0648\u0643\u0630\u0644\u0643 \u0623\u064a\u0636\u0627\u064b \u0643\u0627\u0646 \u064a\u0642\u0648\u0644: \u0625\u0630\u0627 \u0643\u0627\u0646 \u062d\u0627\u062f\u062b\u0627\u064b\u060c \u0641\u0644\u0627 \u0628\u062f \u0644\u0647 \u0645\u0646 \u0623\u0646 \u064a\u0642\u0627\u0644 \u0623\u0646\u0647 \u0644\u0627 \u0633\u0628\u0628 \u0644\u0648\u062c\u0648\u062f \u062c\u0645\u064a\u0639 \u0627\u0644\u0623\u0634\u064a\u0627\u0621\u060c \u0623\u0631\u0627\u062f \u0623\u0646 \u064a\u0639\u0631\u0641 \u0639\u0644\u0649 \u0623\u064a \u0634\u0643\u0644 \u0643\u0627\u0646 \u0644\u0647. \u0648\u0627\u0646\u0647 \u0644\u0627 \u064a\u0648\u062c\u062f \u0627\u0642\u0644 \u0645\u0646\u0647\u0627. \u0648\u0647\u0648 \u0641\u064a \u0623\u062a\u0645.","en":"Aliquam magnam voluptatum adipisci quam accusamus et. Labore consequatur eos sunt. Omnis aliquam maxime tenetur et eligendi quis totam. Id et mollitia molestiae qui aut praesentium. Aut praesentium omnis aliquid velit cupiditate. Quasi error sint velit qui nihil. Quasi aperiam inventore sunt deleniti deleniti expedita rerum. Ratione eos voluptate debitis ea molestiae. Ad officia iusto repellat sed ea. Esse dignissimos quod optio sed velit. Accusamus est enim similique aperiam quia. Nihil accusantium nihil aut sint cum dolorum. Doloribus provident culpa excepturi et mollitia molestiae. Quidem asperiores laborum modi voluptatum. Suscipit laborum molestiae doloremque dolor. Neque rerum quibusdam maiores iure recusandae quo cumque. Incidunt non ut nemo eius veritatis ea eius. Dolorem est iure consequatur. Recusandae et deserunt cupiditate. Nam pariatur quo labore omnis."},"slug":{"ar":"ahlha-alrglyn-aal-alshaty","en":"cum-ipsa-enim-omnis-odit"},"printing_year":"1974","ISBN":"1470885867","EISBN":"9799923911760","cover_image":"https:\/\/via.placeholder.com\/640x480.png\/003366?text=magni"},{"id":39,"title":{"ar":"\u0647\u064a \u0643\u0644\u0647\u0627 \u0641\u064a \u0636\u0645\u0646\u0647 \u0648\u063a\u064a\u0631 \u062e\u0627\u0631\u062c\u0629.","en":"Et aut saepe laborum."},"abstract":{"ar":"\u0639\u0646\u0647\u0627\u060c \u0641\u062a\u0631\u062c\u0639 \u0625\u0644\u0649 \u0645\u0627 \u0643\u0627\u0646\u062a \u0639\u0644\u064a\u0647 \u0641\u0644\u0645 \u064a\u0627\u062a\u062a \u0644\u0647 \u0634\u064a\u0621 \u0645\u0646 \u0647\u0630\u0647 \u0627\u0644\u0645\u0631\u0643\u0628\u0627\u062a \u0644\u0627 \u062a\u063a\u0644\u0628 \u0639\u0644\u064a\u0647 \u0637\u0628\u064a\u0639\u0629 \u0623\u0633\u0637\u0642\u0633 \u0648\u0627\u062d\u062f\u060c \u0641\u0644\u0642\u0648\u062a\u0647 \u0641\u064a\u0647 \u064a\u063a\u0644\u0628 \u0637\u0628\u0627\u0626\u0639 \u0627\u0644\u0627\u0633\u0637\u0642\u0633\u0627\u062a \u0627\u0644\u0628\u0627\u0642\u064a\u0629\u060c \u0648\u064a\u0628\u0637\u0644 \u0642\u0648\u0627\u0647\u0627\u060c \u0648\u064a\u0635\u064a\u0631 \u0630\u0644\u0643 \u0627\u0644\u0645\u0631\u0643\u0628 \u0641\u064a \u062d\u0643\u0645 \u0627\u0644\u0627\u0633\u0637\u0642\u0633 \u0627\u0644\u063a\u0627\u0644\u0628\u060c \u0641\u0644\u0627 \u064a\u0633\u062a\u0623\u0647\u0644 \u0644\u0627\u062c\u0644 \u0630\u0644\u0643 \u0645\u0646 \u0627\u0644\u062d\u064a\u0627\u0629 \u0627\u0644\u062f\u0646\u064a\u0627. \u0648\u0647\u0645 \u0639\u0646 \u0627\u0644\u0622\u062e\u0631\u0629 \u0647\u0645 \u063a\u0627\u0641\u0644\u0648\u0646. \u0635\u062f\u0642 \u0627\u0644\u0644\u0647 \u0627\u0644\u0639\u0638\u064a\u0645. \u0641\u0627\u0646 \u0643\u0646\u062a \u0645\u0645\u0646 \u064a\u0642\u062a\u0646\u0639 \u0628\u0647\u0630\u0627 \u0627\u0644\u0646\u0648\u0639 \u0645\u0646 \u0627\u0644\u0646\u0638\u0631. \u062b\u0645 \u0643\u0627\u0646 \u064a\u0646\u0638\u0631 \u0625\u0644\u0649 \u0627\u0644\u0623\u062c\u0633\u0627\u0645 \u0627\u0644\u0633\u0645\u0627\u0648\u064a\u0629. \u0648\u0627\u0646\u062a\u0647\u0649 \u0625\u0644\u0649 \u0647\u0630\u0627 \u0627\u0644\u0646\u0638\u0631 \u0648\u0627\u0644\u0646\u0645\u0637 \u0627\u0644\u0630\u064a \u0643\u0644\u0627\u0645\u0646\u0627 \u0641\u064a\u0647 \u0641\u0648\u0642 \u0647\u0630\u0627 \u0627\u0644\u0642\u062f\u0631 \u0644\u0627 \u064a\u062a\u0641\u0642\u060c \u0648\u0623\u0646 \u062d\u0638 \u0623\u0643\u062b\u0631 \u0627\u0644\u062c\u0645\u0647\u0648\u0631 \u0645\u0646 \u0627\u0644\u0627\u0646\u062a\u0641\u0627\u0639 \u0628\u0627\u0644\u0634\u0631\u064a\u0639\u0629 \u0625\u0646\u0645\u0627 \u0647\u0648 \u0641\u064a \u0627\u0644\u062c\u0633\u0645\u060c \u0648\u0630\u0644\u0643 \u0623\u0646 \u0645\u0627 \u0643\u0627\u0646 \u0645\u0646 \u0647\u0630\u0647 \u0627\u0644\u0623\u0645\u0648\u0631 \u0643\u0644\u0647\u0627 \u0641 \u0648\u0642\u062a \u0627\u0634\u062a\u063a\u0627\u0644\u0647 \u0627\u0644\u062a\u0634\u0631\u064a\u062d\u060c \u0648\u0634\u0647\u0648\u062a\u0647 \u0641\u064a \u0648\u0642\u0648\u0641\u0647 \u0639\u0644\u0649 \u062e\u0635\u0627\u0626\u0635 \u0623\u0639\u0636\u0627\u0621 \u0627\u0644\u062d\u064a\u0648\u0627\u0646\u060c \u0648\u0628\u0645\u0627\u0630\u0627 \u062a\u062e\u062a\u0644\u0641\u060c \u0648\u0630\u0644\u0643 \u0641\u064a \u0627\u0644\u0645\u062f\u0629 \u0627\u0644\u062a\u064a \u064a\u0628\u0642\u0649\u060c \u0648\u0645\u0646 \u0623\u064a\u0646 \u064a\u0633\u062a\u0645\u062f\u060c \u0648\u0643\u064a\u0641 \u0644\u0627 \u064a\u0643\u0648\u0646 \u0644\u0647\u0627 \u0645\u062b\u0644 \u062a\u0644\u0643 \u0627\u0644\u0630\u0648\u0627\u062a \u0627\u0644\u0628\u0631\u064a\u0626\u0629 \u0639\u0646 \u0627\u0644\u062c\u0633\u0645\u0627\u0646\u064a\u0629\u060c \u0641\u0644\u0627 \u064a\u062a\u0635\u0648\u0631 \u0641\u0633\u0627\u062f\u0647 \u0627\u0644\u0628\u062a\u0629. \u0641\u0644\u0645\u0627 \u062b\u0628\u062a \u0641\u064a \u0639\u0644\u0645 \u0627\u0644\u062a\u0623\u0648\u064a\u0644. \u0642\u062f \u062a\u0639\u0644\u0645 \u0623\u0643\u062b\u0631 \u0627\u0644\u0623\u0644\u0633\u0646\u060c \u0648\u0645\u0647\u0631 \u0641\u064a\u0647\u0627. \u0641\u062c\u0639\u0644 \u064a\u0643\u0644\u0645 \u062d\u064a \u0628\u0646 \u064a\u0642\u0638\u0627\u0646 \u0641\u064a\u0645\u0627 \u0643\u0627\u0646 \u0623\u0644\u0632\u0645 \u0646\u0641\u0633\u0647 \u0625\u0646 \u0644\u0627 \u064a\u0631\u0649 \u0630\u0627 \u062d\u0627\u062c\u0629 \u0622\u0648 \u0639\u0627\u0647\u0629 \u0622\u0648 \u0645\u0636\u0631\u0629\u060c \u0623\u0648 \u0630\u0627 \u0639\u0627\u0626\u0642 \u0645\u0646 \u0627\u0644\u062d\u064a\u0648\u0627\u0646 \u0625\u0646 \u064a\u0623\u062e\u0630 \u0645\u0646 \u0647\u0630\u0647 \u0627\u0644\u0627\u0648\u0635\u0627\u0641\u060c \u0644\u0627 \u064a\u0639\u0645 \u062c\u0645\u064a\u0639 \u0627\u0644\u0623\u062c\u0633\u0627\u0645\u060c \u0641\u0644\u064a\u0633\u062a \u0625\u0630\u0646 \u0644\u0644\u062c\u0633\u0645 \u0628\u0645\u0627 \u0647\u0648 \u062c\u0633\u0645\u060c \u0644\u0645\u0627 \u0648\u062c\u062f \u0625\u0644\u0627 \u0648\u0647\u0645\u0627 \u0644\u0647. \u0648\u0646\u062d\u0646 \u0646\u062c\u062f \u0627\u0644\u062b\u0642\u064a\u0644 \u0644\u0627 \u062a\u0648\u062c\u062f \u0641\u064a\u0647 \u0627\u0644\u062e\u0641\u0629\u060c \u0648\u0627\u0644\u062e\u0641\u064a\u0641 \u0644\u0627 \u064a\u0648\u062c\u062f \u0641\u064a.","en":"Sequi et dolore voluptas sunt nihil. Excepturi libero atque minima reiciendis. Amet saepe ducimus molestias corrupti corporis eos rerum. Ea voluptas pariatur rerum corrupti ipsam architecto ea. Pariatur ad ad repellendus amet. Ut molestiae quam excepturi dolorum. Voluptatem asperiores sunt fugit cum. Quaerat delectus ut reiciendis id et. Quia fugit numquam provident voluptatibus. Dolores fugiat voluptatem maiores hic atque. Voluptas voluptatem est blanditiis ullam. Veniam ad ipsum perferendis corporis. Ut consequatur cupiditate quia ut. Numquam nobis praesentium animi placeat excepturi necessitatibus voluptas. Amet sit magni incidunt reprehenderit excepturi. Quos eum distinctio eveniet quis. Deleniti ea earum eos cumque ex incidunt suscipit. Quod atque non autem quam. Et sapiente ut id accusantium. Ipsam tempora asperiores beatae. Nemo impedit autem ut unde at reiciendis itaque. Qui commodi ut minus deserunt laborum nobis modi. Nisi nam occaecati dolorem illum."},"slug":{"ar":"hy-klha-fy-dmnh-oghyr-kharg","en":"et-aut-saepe-laborum"},"printing_year":"1980","ISBN":"3328191526","EISBN":"9785019305711","cover_image":"https:\/\/via.placeholder.com\/640x480.png\/0000dd?text=et"},{"id":38,"title":{"ar":"\u0641\u0647\u0648 \u0645\u0639 \u062a\u0644\u0643 \u0627\u0644\u0645\u0634\u0627\u0647\u062f\u0629 \u064a\u0639\u0642\u0644.","en":"Nisi fugit ut provident nemo."},"abstract":{"ar":"\u0641\u062d\u0635\u0644\u062a \u0639\u0646\u062f\u0647 \u0627\u0644\u0630\u0627\u062a. \u0648\u0647\u0630\u0647 \u0627\u0644\u0630\u0627\u062a \u0644\u0627 \u062a\u062d\u0635\u0644 \u0625\u0644\u0627 \u0639\u0646\u062f \u0645\u0646 \u064a\u0646\u0643\u0631\u0647 \u0627\u0644\u062a\u0648\u0644\u062f. \u0648\u0646\u062d\u0646 \u0646\u0635\u0641 \u0647\u0646\u0627 \u0643\u064a\u0641 \u062a\u0631\u0628\u0649 \u0648\u0643\u064a\u0641 \u0623\u0646\u062a\u0642\u0644 \u0641\u064a \u0623\u062d\u0648\u0627\u0644\u0647 \u062d\u062a\u0649 \u064a\u0628\u0644\u063a \u0627\u0644\u0645\u0628\u0644\u063a \u0627\u0644\u0639\u0638\u064a\u0645. \u0648\u0623\u0645\u0627 \u0627\u0644\u0630\u064a\u0646 \u0632\u0639\u0645\u0648\u0627 \u0623\u0646\u0647 \u062a\u0648\u0644\u062f \u0645\u0646 \u0627\u0644\u0623\u0631\u0636 \u0643\u062b\u064a\u0631\u0627\u064b\u060c \u0648\u0623\u0646 \u0627\u0644\u0630\u064a \u064a\u0633\u062a\u0636\u064a\u0621 \u0645\u0646 \u0627\u0644\u0634\u0645\u0633 \u0623\u062c\u0632\u0627\u0621\u0627\u064b \u0623\u0643\u062b\u0631\u060c \u0648\u0645\u0627 \u0642\u0631\u0628 \u0645\u0646 \u0627\u0644\u0645\u062d\u064a\u0637 \u0643\u0627\u0646 \u0623\u0642\u0644 \u0636\u0648\u0621\u0627\u064b \u062d\u062a\u0649 \u064a\u0646\u062a\u0647\u064a \u0625\u0644\u0649 \u0627\u0644\u0638\u0644\u0645\u0629 \u0639\u0646\u062f \u0645\u062d\u064a\u0637 \u0627\u0644\u062f\u0627\u0626\u0631\u0629 \u0627\u0644\u0630\u064a \u0645\u0627 \u0623\u0636\u0627\u0621 \u0645\u0648\u0642\u0639\u0647 \u0645\u0646 \u0627\u0644\u0623\u0631\u0636 \u0648\u0627\u0644\u0645\u0627\u0621 \u0648\u0623\u063a\u0644\u0638 \u0645\u0646 \u0627\u0644\u0646\u0627\u0631 \u0648\u0627\u0644\u0647\u0648\u0627\u0621\u060c \u0635\u0627\u0631 \u0641\u064a \u062d\u0643\u0645 \u0627\u0644\u0648\u0633\u0637 \u0648\u0644\u0645 \u064a\u0636\u0627\u062f\u0647 \u0634\u064a\u0621 \u0645\u0646 \u0647\u0630\u0647 \u0627\u0644\u0627\u0636\u0631\u0628 \u0627\u0644\u062b\u0644\u0627\u062b\u0629. \u0622\u0645\u0627 \u0627\u0644\u0636\u0631\u0628 \u0627\u0644\u0623\u0648\u0644: \u0623\u0648\u0635\u0627\u0641 \u0644\u0647\u0627 \u0628\u0627\u0644\u0625\u0636\u0627\u0641\u0629 \u0625\u0644\u0649 \u0627\u0644\u0645\u0648\u062c\u0648\u062f \u0627\u0644\u0648\u0627\u062c\u0628 \u0627\u0644\u0648\u062c\u0648\u062f\u060c \u0645\u062b\u0644 \u0643\u0648\u0646\u0647\u0627 \u0634\u0641\u0627\u0641\u0629 \u0648\u0646\u0627\u0635\u0639\u0629 \u0648\u0637\u0627\u0647\u0631\u0629 \u0645\u0646\u0632\u0647\u0629 \u0639\u0646 \u0627\u0644\u0643\u062f\u0631 \u0648\u0636\u0631\u0648\u0628 \u0627\u0644\u0631\u062c\u0633\u060c \u0648\u0645\u062a\u062d\u0631\u0643\u0629 \u0628\u0627\u0644\u0627\u0633\u062a\u062f\u0627\u0631\u0629 \u0628\u0639\u0636\u0647\u0627 \u0639\u0644\u0649 \u0645\u0631\u0643\u0632 \u0646\u0641\u0633\u0647\u0627\u060c \u0648\u0628\u0639\u0636\u0647\u0627 \u0639\u0644\u0649 \u0645\u0631\u0643\u0632 \u0646\u0641\u0633\u0647\u0627\u060c \u0648\u0628\u0639\u0636\u0647\u0627 \u0639\u0644\u0649 \u0645\u0631\u0643\u0632 \u0646\u0641\u0633\u0647\u0627\u060c \u0648\u0628\u0639\u0636\u0647\u0627 \u0639\u0644\u0649 \u0645\u0631\u0643\u0632 \u063a\u064a\u0631\u0647\u0627. \u0648\u0627\u0644\u0636\u0631\u0628 \u0627\u0644\u062b\u0627\u0644\u062b: \u0623\u0648\u0635\u0627\u0641 \u0644\u0647\u0627 \u0628\u0627\u0644\u0625\u0636\u0627\u0641\u0629 \u0625\u0644\u0649 \u0630\u0644\u0643 \u0623\u0646 \u062d\u0631\u0643\u062a\u0647 \u0642\u062f\u064a\u0645\u0629 \u0644\u0627 \u0646\u0647\u0627\u064a\u0629 \u0644\u0647 \u0623\u0645\u0631 \u0628\u0627\u0637\u0644\u060c \u0648\u0634\u064a\u0621 \u0644\u0627 \u064a\u0645\u0643\u0646\u060c \u0648\u0645\u0639\u0646\u0649 \u0644\u0627 \u064a\u0639\u0642\u0644\u060c \u0648\u062a\u0642\u0648\u0649 \u0647\u0630\u0627 \u0627\u0644\u062d\u0643\u0645 \u0639\u0646\u062f\u0647 \u0628\u062d\u062c\u062c \u0643\u062b\u064a\u0631\u0629\u060c \u0633\u0646\u062d\u062a \u0644\u0647 \u0628\u064a\u0646\u0647 \u0648\u0628\u064a\u0646 \u0646\u0641\u0633\u0647 \u0648\u0630\u0644\u0643 \u0623\u0646\u0647 \u0642\u062f \u062a\u0628\u0631\u0647\u0646 \u0623\u0646 \u0642\u062f\u0631\u062a\u0647 \u063a\u064a\u0631 \u0645\u062a\u0646\u0627\u0647\u064a\u0629\u060c \u0641\u0623\u0645\u0627 \u0623\u0646 \u0646\u062c\u062f \u062e\u0637\u064a\u0646 \u0623\u0628\u062f\u0627\u064b \u064a\u0645\u062a\u062f\u0627\u0646 \u0625\u0644\u0649 \u063a\u064a\u0631 \u0646\u0647\u0627\u064a\u0629 \u062d\u0633\u0628 \u0627\u0645\u062a\u062f\u0627\u062f \u0627\u0644\u062c\u0633\u0645\u060c \u062b\u0645 \u062a\u062e\u064a\u0644\u062a \u0623\u0646 \u062e\u0637\u064a\u0646 \u0627\u062b\u0646\u064a\u0646\u060c \u064a\u0628\u062a\u062f\u0626\u0627\u0646 \u0645\u0646 \u0647\u0630\u0647 \u0627\u0644\u0623\u0645\u0648\u0631 \u0643\u0644\u0647\u0627 \u0641 \u0648\u0642\u062a \u0627\u0634\u062a\u063a\u0627\u0644\u0647 \u0627\u0644\u062a\u0634\u0631\u064a\u062d\u060c \u0648\u0634\u0647\u0648\u062a\u0647 \u0641\u064a \u0648\u0642\u0648\u0641\u0647 \u0639\u0644\u0649 \u062e\u0635\u0627\u0626\u0635 \u0623\u0639\u0636\u0627\u0621.","en":"Voluptates voluptatem odio autem libero error delectus. Ut unde mollitia doloribus esse ipsa amet possimus sed. Saepe perspiciatis natus natus et iste. Commodi commodi ipsa dolor beatae totam. Aspernatur et est libero illo quas architecto. Dolores quo ut dicta accusamus rerum. Recusandae praesentium reprehenderit minus sunt. Nihil non magni quaerat laudantium et et. Laboriosam enim est sed qui voluptate. Ipsam aut qui nisi illo veritatis nihil et. Earum maxime sed dolor quaerat. Autem et voluptatum recusandae deleniti est qui. Repellendus et in perspiciatis et ducimus. Cumque quos cumque id quia odit quia. Tenetur molestiae nostrum cumque consequatur. Quaerat sit soluta dolorem et ipsam. Sit numquam maiores iusto voluptatibus fugiat. Et quos veniam natus minima. Dolores sed a aperiam in. Dignissimos ratione iusto est. Ipsum rem a sapiente eveniet adipisci. Tempore corporis iure reiciendis officiis. Consequatur nihil esse nemo et aspernatur. Commodi et rem ex rerum aut."},"slug":{"ar":"fho-maa-tlk-almshahd-yaakl","en":"nisi-fugit-ut-provident-nemo"},"printing_year":"1988","ISBN":"4332354982","EISBN":"9792368213024","cover_image":"https:\/\/via.placeholder.com\/640x480.png\/00dd33?text=esse"}],"links":{"first":"http:\/\/localhost\/api\/admin\/books?page=1","last":"http:\/\/localhost\/api\/admin\/books?page=14","prev":null,"next":"http:\/\/localhost\/api\/admin\/books?page=2"},"meta":{"current_page":1,"from":1,"last_page":14,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/admin\/books?page=1","label":"1","active":true},{"url":"http:\/\/localhost\/api\/admin\/books?page=2","label":"2","active":false},{"url":"http:\/\/localhost\/api\/admin\/books?page=3","label":"3","active":false},{"url":"http:\/\/localhost\/api\/admin\/books?page=4","label":"4","active":false},{"url":"http:\/\/localhost\/api\/admin\/books?page=5","label":"5","active":false},{"url":"http:\/\/localhost\/api\/admin\/books?page=6","label":"6","active":false},{"url":"http:\/\/localhost\/api\/admin\/books?page=7","label":"7","active":false},{"url":"http:\/\/localhost\/api\/admin\/books?page=8","label":"8","active":false},{"url":"http:\/\/localhost\/api\/admin\/books?page=9","label":"9","active":false},{"url":"http:\/\/localhost\/api\/admin\/books?page=10","label":"10","active":false},{"url":null,"label":"...","active":false},{"url":"http:\/\/localhost\/api\/admin\/books?page=13","label":"13","active":false},{"url":"http:\/\/localhost\/api\/admin\/books?page=14","label":"14","active":false},{"url":"http:\/\/localhost\/api\/admin\/books?page=2","label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/admin\/books","per_page":3,"to":3,"total":40},"success":true,"total":true,"errors":null}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/books
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Book Management'
      subgroupDescription: 'APIs for managing Books'
      title: 'Store Book.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the Book.'
        required: true
        example:
          en: Book
          ar: كتاب
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      abstract:
        name: abstract
        description: 'The abstract of the Book.'
        required: true
        example:
          en: 'about the book'
          ar: 'حول الكتاب'
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      ISBN:
        name: ISBN
        description: 'The ISBN of the Book.'
        required: true
        example: quis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      EISBN:
        name: EISBN
        description: 'The EISBN of the Book.'
        required: true
        example: amet
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      printing_year:
        name: printing_year
        description: 'The printing year of the Book.'
        required: true
        example: quidem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      cover_image:
        name: cover_image
        description: 'The cover image of the Book.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      author_id:
        name: author_id
        description: 'The author id of the Book.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      awards:
        name: awards
        description: 'The awards of the Book.'
        required: true
        example:
          - voluptatem
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      formats:
        name: formats
        description: 'The formats of the Book.'
        required: true
        example:
          - dolores
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      categories:
        name: categories
        description: 'The categories of the Book.'
        required: true
        example:
          - modi
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      reviews:
        name: reviews
        description: 'The reviews of the Book.'
        required: true
        example:
          - labore
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'awards[].en':
        name: 'awards[].en'
        description: ''
        required: true
        example: cupiditate
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'awards[].ar':
        name: 'awards[].ar'
        description: ''
        required: true
        example: aperiam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'categories[].id':
        name: 'categories[].id'
        description: ''
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'formats[].id':
        name: 'formats[].id'
        description: ''
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'reviews[].username':
        name: 'reviews[].username'
        description: 'Must not be greater than 255 characters.'
        required: true
        example: cjgftefyijmfdapeze
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'reviews[].review':
        name: 'reviews[].review'
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'reviews[].review.en':
        name: 'reviews[].review.en'
        description: ''
        required: true
        example: distinctio
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'reviews[].review.ar':
        name: 'reviews[].review.ar'
        description: ''
        required: true
        example: veniam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'formats.*.id':
        name: 'formats.*.id'
        description: 'The id of the format.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'categories.*.id':
        name: 'categories.*.id'
        description: 'The id of the category.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'awards.*':
        name: 'awards.*'
        description: 'The awards of the Book.'
        required: true
        example:
          en: award
          ar: جائزة
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'reviews.*username':
        name: 'reviews.*username'
        description: 'The username of the Review.'
        required: true
        example: sequi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'reviews.*review':
        name: 'reviews.*review'
        description: 'The review of the Review.'
        required: true
        example:
          en: review
          ar: مراجعة
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title:
        en: Book
        ar: كتاب
      abstract:
        en: 'about the book'
        ar: 'حول الكتاب'
      ISBN: quis
      EISBN: amet
      printing_year: quidem
      author_id: 5
      awards:
        - voluptatem
      formats:
        - dolores
      categories:
        - modi
      reviews:
        -
          review:
            en: distinctio
            ar: veniam
    fileParameters:
      cover_image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/books/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Book Management'
      subgroupDescription: 'APIs for managing Books'
      title: 'Get Book by slug.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the Book'
        required: true
        example: enim
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: enim
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\Book] enim"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/books/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Book Management'
      subgroupDescription: 'APIs for managing Books'
      title: 'Update Book.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the Book'
        required: true
        example: molestias
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: molestias
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the Book.'
        required: true
        example:
          en: Book
          ar: كتاب
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      abstract:
        name: abstract
        description: 'The abstract of the Book.'
        required: true
        example:
          en: 'about the book'
          ar: 'حول الكتاب'
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      ISBN:
        name: ISBN
        description: 'The ISBN of the Book.'
        required: true
        example: totam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      EISBN:
        name: EISBN
        description: 'The EISBN of the Book.'
        required: true
        example: fuga
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      printing_year:
        name: printing_year
        description: 'The printing year of the Book.'
        required: true
        example: in
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      cover_image:
        name: cover_image
        description: 'The cover image of the Book.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      author_id:
        name: author_id
        description: 'The author id of the Book.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      formats:
        name: formats
        description: 'The formats of the Book.'
        required: true
        example:
          - sunt
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      categories:
        name: categories
        description: 'The categories of the Book.'
        required: true
        example:
          - eveniet
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'categories[].id':
        name: 'categories[].id'
        description: ''
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'formats[].id':
        name: 'formats[].id'
        description: ''
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'formats.*.id':
        name: 'formats.*.id'
        description: 'The id of the format.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'categories.*.id':
        name: 'categories.*.id'
        description: 'The id of the category.'
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      awards:
        name: awards
        description: 'The awards of the Book.'
        required: true
        example:
          - nesciunt
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'awards.*':
        name: 'awards.*'
        description: 'The awards of the Book.'
        required: true
        example:
          en: award
          ar: جائزة
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      reviews:
        name: reviews
        description: 'The reviews of the Book.'
        required: true
        example:
          - aut
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'reviews.*username':
        name: 'reviews.*username'
        description: 'The username of the Review.'
        required: true
        example: quae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'reviews.*review':
        name: 'reviews.*review'
        description: 'The review of the Review.'
        required: true
        example:
          en: review
          ar: مراجعة
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title:
        en: Book
        ar: كتاب
      abstract:
        en: 'about the book'
        ar: 'حول الكتاب'
      ISBN: totam
      EISBN: fuga
      printing_year: in
      author_id: 7
      formats:
        - sunt
      categories:
        - eveniet
      awards:
        - nesciunt
      reviews:
        - aut
    fileParameters:
      cover_image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/books/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Book Management'
      subgroupDescription: 'APIs for managing Books'
      title: 'Delete Book.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the Book'
        required: true
        example: culpa
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: culpa
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/book-categories
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Book Category Management'
      subgroupDescription: 'APIs for managing Book Categories'
      title: 'Get all Book Categories.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      page:
        name: page
        description: 'The page number'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      perPage:
        name: perPage
        description: 'Number of items pre page'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      page: 1
      perPage: 3
    queryParameters:
      'filter[title]':
        name: 'filter[title]'
        description: 'filter Book Categroies by title.'
        required: false
        example: voluptatibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      'filter[title]': voluptatibus
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":20,"title":{"ar":"\u064a\u0646\u0638\u0631 \u0625\u0644\u0649.","en":"Rerum."},"slug":{"ar":"ynthr-al","en":"rerum"}},{"id":19,"title":{"ar":"\u0627\u0644\u0645\u062d\u062a\u0627\u062c\u0629.","en":"Est."},"slug":{"ar":"almhtag","en":"est-1"}},{"id":18,"title":{"ar":"\u0628\u0639\u064a\u062f\u0629 \u0639\u0646.","en":"Et iste."},"slug":{"ar":"baayd-aan","en":"et-iste"}},{"id":17,"title":{"ar":"\u062a\u062f\u0648\u0645 \u0641\u064a\u0647.","en":"Eum quo."},"slug":{"ar":"tdom-fyh","en":"eum-quo"}},{"id":16,"title":{"ar":"\u0623\u0646\u0643\u0631 \u0630\u0644\u0643.","en":"Corporis."},"slug":{"ar":"ankr-thlk","en":"corporis"}},{"id":15,"title":{"ar":"\u0639\u0644\u0649 \u062c\u0627\u062f\u0629.","en":"Quaerat."},"slug":{"ar":"aal-gad","en":"quaerat"}},{"id":14,"title":{"ar":"\u0648\u0625\u0630\u0627 \u0643\u0627\u0646.","en":"Vero."},"slug":{"ar":"oatha-kan","en":"vero"}},{"id":13,"title":{"ar":"\u0627\u0644\u0630\u064a \u0643\u0631\u0647.","en":"Aut."},"slug":{"ar":"althy-krh","en":"aut"}},{"id":12,"title":{"ar":"\u0643\u0644\u0647\u0627 \u0625\u0644\u0649.","en":"Illo."},"slug":{"ar":"klha-al","en":"illo"}},{"id":11,"title":{"ar":"\u0628\u0627\u0644\u0623\u062c\u0633\u0627\u0645.","en":"Sit."},"slug":{"ar":"balagsam","en":"sit"}},{"id":10,"title":{"ar":"\u0627\u0644\u0633\u0641\u064a\u0646\u0629\u060c.","en":"Est."},"slug":{"ar":"alsfyn","en":"est"}},{"id":9,"title":{"ar":"\u0646\u0641\u0633\u0647 \u0639\u0644\u0649.","en":"Aperiam."},"slug":{"ar":"nfsh-aal","en":"aperiam"}},{"id":8,"title":{"ar":"\u0648\u0627\u0644\u0625\u0642\u0628\u0627\u0644.","en":"Omnis et."},"slug":{"ar":"oalakbal","en":"omnis-et"}},{"id":7,"title":{"ar":"\u0633\u0648\u062f\u0627\u0621 \u0645\u0646.","en":"Qui."},"slug":{"ar":"sodaaa-mn","en":"qui"}},{"id":6,"title":{"ar":"\u0642\u0648\u064a\u0629 \u0623\u0646\u0647.","en":"Nihil."},"slug":{"ar":"koy-anh","en":"nihil"}}],"links":{"first":"http:\/\/localhost\/api\/admin\/book-categories?page=1","last":"http:\/\/localhost\/api\/admin\/book-categories?page=2","prev":null,"next":"http:\/\/localhost\/api\/admin\/book-categories?page=2"},"meta":{"current_page":1,"from":1,"last_page":2,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/admin\/book-categories?page=1","label":"1","active":true},{"url":"http:\/\/localhost\/api\/admin\/book-categories?page=2","label":"2","active":false},{"url":"http:\/\/localhost\/api\/admin\/book-categories?page=2","label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/admin\/book-categories","per_page":15,"to":15,"total":20},"success":true,"total":true,"errors":null}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/book-categories
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Book Category Management'
      subgroupDescription: 'APIs for managing Book Categories'
      title: 'Store Book Category.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the Book Category.'
        required: true
        example:
          en: Historical
          ar: تاريخي
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title:
        en: Historical
        ar: تاريخي
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/book-categories/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Book Category Management'
      subgroupDescription: 'APIs for managing Book Categories'
      title: 'Get Book Category by slug.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the book category'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\BookCategory] 2"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/book-categories/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Book Category Management'
      subgroupDescription: 'APIs for managing Book Categories'
      title: 'Update Book Category.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the book category'
        required: true
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: 9
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the Book Category.'
        required: true
        example:
          en: Historical
          ar: تاريخي
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title:
        en: Historical
        ar: تاريخي
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/book-categories/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Book Category Management'
      subgroupDescription: 'APIs for managing Book Categories'
      title: 'Delete Book Category.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the book category'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/authors
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Author Management'
      subgroupDescription: 'APIs for managing Authors'
      title: 'Get all Authors.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      'filter[name]':
        name: 'filter[name]'
        description: 'filter Authors by name.'
        required: false
        example: quam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'include[]':
        name: 'include[]'
        description: 'relations to load on the author'
        required: false
        example: "['books']"
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      page:
        name: page
        description: 'The page number'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      perPage:
        name: perPage
        description: 'Number of items pre page'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      'filter[name]': quam
      'include[]': "['books']"
      page: 1
      perPage: 3
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":20,"name":{"ar":"\u0627\u0644\u0633\u064a\u062f\u0629 \u0644\u064a\u0627\u0646 \u0627\u0644\u0639\u062a\u064a\u0628\u064a","en":"Ut eum."},"about":{"ar":"\u0628\u0639\u062f \u0648\u0635\u0648\u0644\u0647\u0627 \u0625\u0644\u064a\u0647\u0645\u060c \u0648\u0635\u0641 \u0644\u0647 \u062c\u0645\u064a\u0639 \u0627\u0644\u0642\u0648\u0649 \u0627\u0644\u0645\u062f\u0631\u0643\u0629\u060c \u0641\u0631\u0623\u0649 \u0623\u0646 \u0643\u0644 \u0648\u0627\u062d\u062f \u0645\u0646 \u0627\u0644\u0627\u0633\u0637\u0642\u0633\u0627\u062a\u060c \u0641\u0643\u0623\u0646\u0647 \u0644\u0627 \u0645\u0636\u0627\u062f\u0629 \u0644\u0635\u0648\u0631\u062a\u0647\u060c.","en":"Molestiae perferendis sit non maiores et. Porro et et aliquam veniam aliquid est."},"slug":{"ar":"alsyd-lyan-alaatyby","en":"ut-eum"},"avatar":"https:\/\/via.placeholder.com\/640x480.png\/009977?text=commodi"},{"id":19,"name":{"ar":"\u062c\u0627\u0633\u0631 \u0627\u0644\u0645\u0634\u064a\u0642\u062d","en":"Ut."},"about":{"ar":"\u0627\u0635\u0644 \u0630\u0644\u0643 \u0627\u0644\u0634\u064a\u0621 \u0645\u0627 \u0647\u0648\u061f \u0648\u0643\u064a\u0641 \u0647\u0648\u061f \u0648\u0645\u0627 \u0627\u0644\u0630\u064a \u0623\u0648\u062c\u0628 \u0628\u0643\u0627\u0621\u0647 \u0648\u062a\u0636\u0631\u0639\u0647\u061b \u0641\u0632\u0627\u062f \u0641\u064a \u0627\u0644\u062f\u0646\u0648 \u0645\u0646\u0647 \u062d\u062a\u0649 \u0623\u062d\u0633 \u0628\u0647 \u0623\u0633\u0627\u0644\u061b \u0641\u0627\u0634\u062a\u062f.","en":"A fuga iusto non consequatur. Porro commodi eos id et magnam. Expedita id fugiat dolores eos."},"slug":{"ar":"gasr-almshykh","en":"ut"},"avatar":"https:\/\/via.placeholder.com\/640x480.png\/0055ff?text=est"},{"id":18,"name":{"ar":"\u0622\u0645\u0627\u0644 \u0645\u062f\u0646\u064a","en":"Maiores."},"about":{"ar":"\u062a\u0644\u0643 \u0627\u0644\u0623\u0641\u0639\u0627\u0644 \u0630\u0627\u062a\u064a\u0629 \u0644\u0647\u0627\u060c \u0623\u0648 \u0633\u0627\u0631\u064a\u0629 \u0623\u0644\u064a\u0647\u0627 \u0645\u0646 \u063a\u064a\u0631\u0647\u0627. \u0648\u0643\u0627\u0646 \u0641\u064a \u063a\u062f\u0648\u0647\u0645\u0627 \u0648\u0631\u0648\u0627\u062d\u0647\u0645\u0627 \u0642\u062f \u0623\u0644\u0641\u0647\u0645\u0627 \u0631\u0628\u0631\u0628 \u064a\u0633\u0631\u062d \u0648\u064a\u0628\u064a\u062a.","en":"Sunt qui quidem maxime minus voluptatum vero ea. Et dolorum deserunt est est quod consequatur quia."},"slug":{"ar":"amal-mdny","en":"maiores"},"avatar":"https:\/\/via.placeholder.com\/640x480.png\/006677?text=perferendis"}],"links":{"first":"http:\/\/localhost\/api\/admin\/authors?page=1","last":"http:\/\/localhost\/api\/admin\/authors?page=7","prev":null,"next":"http:\/\/localhost\/api\/admin\/authors?page=2"},"meta":{"current_page":1,"from":1,"last_page":7,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/admin\/authors?page=1","label":"1","active":true},{"url":"http:\/\/localhost\/api\/admin\/authors?page=2","label":"2","active":false},{"url":"http:\/\/localhost\/api\/admin\/authors?page=3","label":"3","active":false},{"url":"http:\/\/localhost\/api\/admin\/authors?page=4","label":"4","active":false},{"url":"http:\/\/localhost\/api\/admin\/authors?page=5","label":"5","active":false},{"url":"http:\/\/localhost\/api\/admin\/authors?page=6","label":"6","active":false},{"url":"http:\/\/localhost\/api\/admin\/authors?page=7","label":"7","active":false},{"url":"http:\/\/localhost\/api\/admin\/authors?page=2","label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/admin\/authors","per_page":3,"to":3,"total":20},"success":true,"total":true,"errors":null}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/authors
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Author Management'
      subgroupDescription: 'APIs for managing Authors'
      title: 'Store Author.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the Author.'
        required: true
        example:
          en: Ahmad
          ar: أحمد
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      about:
        name: about
        description: 'The about of the Author.'
        required: true
        example:
          en: 'about the author'
          ar: 'حول المؤلف'
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      avatar:
        name: avatar
        description: 'The avatar of the Author.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name:
        en: Ahmad
        ar: أحمد
      about:
        en: 'about the author'
        ar: 'حول المؤلف'
    fileParameters:
      avatar: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/authors/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Author Management'
      subgroupDescription: 'APIs for managing Authors'
      title: 'Get Author by slug.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the Author'
        required: true
        example: reiciendis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: reiciendis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\Author] reiciendis"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/authors/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Author Management'
      subgroupDescription: 'APIs for managing Authors'
      title: 'Update Author.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the Author'
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the Author.'
        required: true
        example:
          en: Ahmad
          ar: أحمد
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      about:
        name: about
        description: 'The about of the Author.'
        required: true
        example:
          en: 'about the author'
          ar: 'حول المؤلف'
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      avatar:
        name: avatar
        description: 'The avatar of the Author.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name:
        en: Ahmad
        ar: أحمد
      about:
        en: 'about the author'
        ar: 'حول المؤلف'
    fileParameters:
      avatar: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/authors/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Author Management'
      subgroupDescription: 'APIs for managing Authors'
      title: 'Delete Author.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the Author.'
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: 15
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/book-awards
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Book Awards Management'
      subgroupDescription: 'APIs for managing Book Awards'
      title: 'Store Book Award.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the Book Award.'
        required: true
        example:
          en: Historical
          ar: تاريخي
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      book_id:
        name: book_id
        description: 'The id of the Book.'
        required: true
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title:
        en: Historical
        ar: تاريخي
      book_id: 13
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/book-awards/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Book Awards Management'
      subgroupDescription: 'APIs for managing Book Awards'
      title: 'Update Book Award.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the book award'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the Book Award.'
        required: true
        example:
          en: Historical
          ar: تاريخي
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title:
        en: Historical
        ar: تاريخي
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/book-awards/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Book Awards Management'
      subgroupDescription: 'APIs for managing Book Awards'
      title: 'Delete Book Award.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the book award'
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: 15
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/book-reviews
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Book Reviews Management'
      subgroupDescription: 'APIs for managing Book Reviews'
      title: 'Store Book Review.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'The username of the Book Review.'
        required: true
        example:
          - dolorem
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      review:
        name: review
        description: 'The review of the Book Review.'
        required: true
        example:
          - id
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      book_id:
        name: book_id
        description: 'The id of the Book.'
        required: true
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      username:
        - dolorem
      review:
        - id
      book_id: 18
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/book-reviews/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Book Reviews Management'
      subgroupDescription: 'APIs for managing Book Reviews'
      title: 'Update Book Review.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the book review'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'The username of the Book Review.'
        required: true
        example:
          - quod
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      review:
        name: review
        description: 'The review of the Book Review.'
        required: true
        example:
          - consequuntur
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      username:
        - quod
      review:
        - consequuntur
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/book-reviews/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Book Reviews Management'
      subgroupDescription: 'APIs for managing Book Reviews'
      title: 'Delete Book Review.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the book review'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/contact-types
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Contact type Management'
      subgroupDescription: 'APIs for managing Contact types.'
      title: 'Get all Contact types.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      page:
        name: page
        description: 'The page number'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      perPage:
        name: perPage
        description: 'Number of items pre page'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      page: 1
      perPage: 3
    queryParameters:
      'filter[title]':
        name: 'filter[title]'
        description: 'filter Book Categroies by title.'
        required: false
        example: deserunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'include[contacts]':
        name: 'include[contacts]'
        description: 'include contacts with the contact type.'
        required: false
        example:
          - iusto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      'filter[title]': deserunt
      'include[contacts]':
        - iusto
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":3,"title":"email","slug":"email"},{"id":2,"title":"whatsapp","slug":"whatsapp"},{"id":1,"title":"facebook","slug":"facebook"}],"links":{"first":"http:\/\/localhost\/api\/admin\/contact-types?page=1","last":"http:\/\/localhost\/api\/admin\/contact-types?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/admin\/contact-types?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/admin\/contact-types","per_page":15,"to":3,"total":3},"success":true,"total":true,"errors":null}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/contact-types
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Contact type Management'
      subgroupDescription: 'APIs for managing Contact types.'
      title: 'Store Contact type.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the Contact type.'
        required: true
        example:
          - veniam
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title:
        - veniam
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/contact-types/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Contact type Management'
      subgroupDescription: 'APIs for managing Contact types.'
      title: 'Get Contact type by slug.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the contact type.'
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: qui
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\ContactType] qui"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/contact-types/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Contact type Management'
      subgroupDescription: 'APIs for managing Contact types.'
      title: 'Update Contact type.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the contact type.'
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: 15
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the Contact type.'
        required: true
        example:
          - et
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title:
        - et
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/contact-types/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Contact type Management'
      subgroupDescription: 'APIs for managing Contact types.'
      title: 'Delete Contact type.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the contact type.'
        required: true
        example: sint
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: sint
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/contacts
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Contact Management'
      subgroupDescription: 'APIs for managing Contacts'
      title: 'Get all Contacts.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      page:
        name: page
        description: 'The page number'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      perPage:
        name: perPage
        description: 'Number of items pre page'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      page: 1
      perPage: 3
    queryParameters:
      'filter[value]':
        name: 'filter[value]'
        description: 'filter Contacts by value.'
        required: false
        example: error
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'include[contactType]':
        name: 'include[contactType]'
        description: 'include contact type.'
        required: false
        example: impedit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      'filter[value]': error
      'include[contactType]': impedit
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":3,"value":"rashm@gmail.com","slug":"email-rashm-at-gmailcom"},{"id":2,"value":"99201011","slug":"whatsapp-99201011"},{"id":1,"value":"rashm.facebook","slug":"facebook-rashmfacebook"}],"links":{"first":"http:\/\/localhost\/api\/admin\/contacts?page=1","last":"http:\/\/localhost\/api\/admin\/contacts?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/admin\/contacts?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/admin\/contacts","per_page":15,"to":3,"total":3},"success":true,"total":true,"errors":null}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/contacts
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Contact Management'
      subgroupDescription: 'APIs for managing Contacts'
      title: 'Store Contact.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      contact_type_id:
        name: contact_type_id
        description: 'The id of the Contact type.'
        required: true
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      value:
        name: value
        description: 'The value of the Contact.'
        required: true
        example: quos
        type: mixed
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      contact_type_id: 19
      value: quos
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/contacts/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Contact Management'
      subgroupDescription: 'APIs for managing Contacts'
      title: 'Get Contact by slug.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the Contact'
        required: true
        example: omnis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: omnis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\Contact] omnis"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/contacts/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Contact Management'
      subgroupDescription: 'APIs for managing Contacts'
      title: 'Update Contact.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the Contact'
        required: true
        example: accusantium
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: accusantium
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      value:
        name: value
        description: 'The value of the Contact.'
        required: true
        example: reprehenderit
        type: mixed
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      value: reprehenderit
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/contacts/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Contact Management'
      subgroupDescription: 'APIs for managing Contacts'
      title: 'Delete Contact.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the Contact'
        required: true
        example: tempora
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: tempora
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/notifications
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: Notifications
      subgroupDescription: 'APIs for Notifications.'
      title: 'Get all Notifications.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"success":true,"total":false,"errors":null}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/notifications/{type}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: Notifications
      subgroupDescription: 'APIs for Notifications.'
      title: 'Get Notifications by service type.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: 'The type of the service.'
        required: true
        example: voluptatum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      type: voluptatum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\Notification]."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/blogs
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Blog Management'
      subgroupDescription: 'APIs for managing Blogs'
      title: 'Get all Blogs.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      'filter[title]':
        name: 'filter[title]'
        description: 'filter Blogs by name.'
        required: false
        example: corporis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[writer]':
        name: 'filter[writer]'
        description: 'filter Blogs by writer name.'
        required: false
        example: reiciendis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'include[]':
        name: 'include[]'
        description: 'relations to load on the blog'
        required: false
        example: "['blogCategories']"
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      page:
        name: page
        description: 'The page number'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      perPage:
        name: perPage
        description: 'Number of items pre page'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      'filter[title]': corporis
      'filter[writer]': reiciendis
      'include[]': "['blogCategories']"
      page: 1
      perPage: 3
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":10,"slug":"ea-aut-odio-quam-esse","title":"Ea aut odio quam esse.","content":"Tempore commodi hic blanditiis non qui illo. Voluptatem excepturi eaque dolore asperiores aliquid. Natus beatae quia quod omnis necessitatibus laborum. Et rerum qui quam. Molestias atque consectetur quae cum. Tempora ut quod quisquam velit reiciendis esse neque. Dignissimos molestiae amet reprehenderit minus iure blanditiis dicta. Officia minima est consequatur quasi explicabo rerum nulla. Eos debitis eos enim quos id dolore vel et. Laudantium rerum aut quidem cumque reprehenderit sunt. Temporibus enim cumque et. Occaecati id ducimus tenetur harum assumenda. Omnis aut et quod et dolorem inventore. Consectetur sit occaecati dolor qui architecto. A hic ratione tempore nesciunt nisi perferendis ullam ipsa. Cupiditate illum et recusandae repudiandae deleniti accusantium dolores. Consequatur facere sequi vel dignissimos. Consequuntur qui labore odio voluptatem voluptatibus. Sed est laborum quo iure.","writer":"Fugit.","date":"1994-11-01 00:00:00","lang":"ar","cover_image":"https:\/\/via.placeholder.com\/640x480.png\/0033cc?text=ipsa"},{"id":9,"slug":"excepturi-qui-et-qui-aperiam","title":"Excepturi qui et qui aperiam.","content":"Laudantium inventore unde qui animi ut. Ut ut iste dolore qui quo ut. Qui labore unde eos qui sed officia blanditiis. Corporis odio corrupti blanditiis ut laudantium eveniet. Aliquam pariatur dolores repellendus possimus aut fugit. Harum vel porro expedita ut minus totam accusantium nihil. Doloribus sit quam ullam iure aliquid ut modi quas. Velit eaque consectetur suscipit. Est molestiae quia voluptates corrupti. Delectus et occaecati voluptatum totam necessitatibus. Qui magni ipsa omnis. Fugiat quisquam vel quia cupiditate doloremque consequatur quos. Non et quo qui et aliquam voluptatem quibusdam. Ad dolor iste possimus. Voluptatum et quisquam ipsum possimus. Perferendis vel esse labore cum eaque. Ut voluptates rerum expedita nihil doloribus similique modi voluptatem. Minima dolorem fugiat illo quisquam. Placeat et delectus dolorum nesciunt.","writer":"Eveniet.","date":"1990-10-27 00:00:00","lang":"ar","cover_image":"https:\/\/via.placeholder.com\/640x480.png\/009988?text=soluta"},{"id":8,"slug":"et-qui-natus-iste-veniam","title":"Et qui natus iste veniam.","content":"Et rerum voluptas sequi alias. Est sapiente sunt tempore omnis sit. Fugit eum itaque deserunt sint dolores. Distinctio corrupti quidem ut quia. Et ex veritatis fugit et quisquam maxime. Enim voluptatum consectetur aut. Quis occaecati corporis magnam delectus enim. A veritatis assumenda mollitia et distinctio et. Rerum officiis veritatis dolore laudantium. Earum velit dicta in voluptatem voluptas sed. Ex est nesciunt rerum velit facere. Veritatis rerum fuga fuga. Laudantium ipsum omnis deleniti necessitatibus eius est. Optio et voluptas porro cum. Distinctio mollitia libero modi aperiam aspernatur eum consequatur. Nesciunt maiores dolore tenetur rerum voluptas rerum qui animi. Provident ea repudiandae sit ut adipisci. Ipsam eius aspernatur quod. Enim exercitationem quaerat autem et quibusdam voluptate. Culpa quasi rem illo dolorem placeat. Qui harum dolor reprehenderit laudantium.","writer":"Eos.","date":"1978-07-16 00:00:00","lang":"en","cover_image":"https:\/\/via.placeholder.com\/640x480.png\/00ddbb?text=quis"}],"links":{"first":"http:\/\/localhost\/api\/admin\/blogs?page=1","last":"http:\/\/localhost\/api\/admin\/blogs?page=4","prev":null,"next":"http:\/\/localhost\/api\/admin\/blogs?page=2"},"meta":{"current_page":1,"from":1,"last_page":4,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/admin\/blogs?page=1","label":"1","active":true},{"url":"http:\/\/localhost\/api\/admin\/blogs?page=2","label":"2","active":false},{"url":"http:\/\/localhost\/api\/admin\/blogs?page=3","label":"3","active":false},{"url":"http:\/\/localhost\/api\/admin\/blogs?page=4","label":"4","active":false},{"url":"http:\/\/localhost\/api\/admin\/blogs?page=2","label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/admin\/blogs","per_page":3,"to":3,"total":10},"success":true,"total":true,"errors":null}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/blogs
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Blog Management'
      subgroupDescription: 'APIs for managing Blogs'
      title: 'Store Blog.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the Blog.'
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      content:
        name: content
        description: 'The content of the Blog.'
        required: true
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      writer:
        name: writer
        description: 'The writer of the Blog.'
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      date:
        name: date
        description: 'The date of the Blog.'
        required: true
        example: incidunt
        type: date
        enumValues: []
        exampleWasSpecified: false
        custom: []
      lang:
        name: lang
        description: 'The lang of the Blog.'
        required: true
        example: aliquam
        type: enum
        enumValues: []
        exampleWasSpecified: false
        custom: []
      cover_image:
        name: cover_image
        description: 'The cover image of the Blog.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      categories:
        name: categories
        description: 'The categories of the Blog.'
        required: true
        example:
          - sit
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'categories[].id':
        name: 'categories[].id'
        description: ''
        required: true
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'categories.*.id':
        name: 'categories.*.id'
        description: 'The id of the category.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: est
      content: dolorem
      writer: qui
      date: incidunt
      lang: aliquam
      categories:
        - sit
    fileParameters:
      cover_image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/blogs/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Blog Management'
      subgroupDescription: 'APIs for managing Blogs'
      title: 'Get Blog by slug.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the Blog'
        required: true
        example: non
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: non
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\Blog] non"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/blogs/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Blog Management'
      subgroupDescription: 'APIs for managing Blogs'
      title: 'Update Blog.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the blog.'
        required: true
        example: et-tempora-dolores-optio-et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: et-tempora-dolores-optio-et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the Blog.'
        required: true
        example: numquam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      content:
        name: content
        description: 'The content of the Blog.'
        required: true
        example: quos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      writer:
        name: writer
        description: 'The writer of the Blog.'
        required: true
        example: dolores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      date:
        name: date
        description: 'The date of the Blog.'
        required: true
        example: quaerat
        type: date
        enumValues: []
        exampleWasSpecified: false
        custom: []
      lang:
        name: lang
        description: 'The lang of the Blog.'
        required: true
        example: qui
        type: enum
        enumValues: []
        exampleWasSpecified: false
        custom: []
      cover_image:
        name: cover_image
        description: 'The cover image of the Blog.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      categories:
        name: categories
        description: 'The categories of the Blog.'
        required: true
        example:
          - laboriosam
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'categories[].id':
        name: 'categories[].id'
        description: ''
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'categories.*.id':
        name: 'categories.*.id'
        description: 'The id of the category.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: numquam
      content: quos
      writer: dolores
      date: quaerat
      lang: qui
      categories:
        - laboriosam
    fileParameters:
      cover_image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/blogs/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Blog Management'
      subgroupDescription: 'APIs for managing Blogs'
      title: 'Delete Blog.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the Blog'
        required: true
        example: corporis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: corporis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/blog-categories
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Blog Category Management'
      subgroupDescription: 'APIs for managing Blog Categories'
      title: 'Get all Blog Categories.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      page:
        name: page
        description: 'The page number'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      perPage:
        name: perPage
        description: 'Number of items pre page'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      page: 1
      perPage: 3
    queryParameters:
      'filter[title]':
        name: 'filter[title]'
        description: 'filter Blog Categroies by title.'
        required: false
        example: velit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      'filter[title]': velit
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":20,"title":{"ar":"\u0642\u062f \u0627\u0646\u0635\u0631\u0641.","en":"In."},"slug":{"ar":"kd-ansrf","en":"in"}},{"id":19,"title":{"ar":"\u0645\u0646 \u0623\u0635\u0646\u0627\u0641.","en":"Soluta."},"slug":{"ar":"mn-asnaf","en":"soluta"}},{"id":18,"title":{"ar":"\u064a\u0639\u0645 \u062c\u0645\u064a\u0639.","en":"Nisi et."},"slug":{"ar":"yaam-gmyaa","en":"nisi-et"}},{"id":17,"title":{"ar":"\u0627\u0644\u0645\u0635\u0646\u0648\u0639\u060c.","en":"Adipisci."},"slug":{"ar":"almsnoaa","en":"adipisci"}},{"id":16,"title":{"ar":"\u0627\u0644\u0638\u0646 \u0628\u0645\u0627.","en":"At."},"slug":{"ar":"althn-bma","en":"at"}},{"id":15,"title":{"ar":"\u0628\u0645\u062b\u0644 \u0647\u0630\u0627.","en":"Aliquam."},"slug":{"ar":"bmthl-htha","en":"aliquam"}},{"id":14,"title":{"ar":"\u0645\u0646 \u0647\u0645\u0632\u0627\u062a.","en":"Omnis."},"slug":{"ar":"mn-hmzat","en":"omnis"}},{"id":13,"title":{"ar":"\u0648\u0627\u0645\u0627 \u062c\u0633\u0645.","en":"Deserunt."},"slug":{"ar":"oama-gsm","en":"deserunt"}},{"id":12,"title":{"ar":"\u062d\u062a\u0649 \u0634\u063a\u0644\u0647.","en":"Ducimus."},"slug":{"ar":"ht-shghlh","en":"ducimus"}},{"id":11,"title":{"ar":"\u0628\u0633\u0627\u062d\u0644\u0647\u0627\u061b.","en":"Nulla."},"slug":{"ar":"bsahlha","en":"nulla"}},{"id":10,"title":{"ar":"\u0645\u0646 \u0623\u063a\u0635\u0627\u0646.","en":"Aut."},"slug":{"ar":"mn-aghsan","en":"aut"}},{"id":9,"title":{"ar":"\u0648\u0647\u0630\u0627 \u0639\u0644\u0649.","en":"Sed quo."},"slug":{"ar":"ohtha-aal","en":"sed-quo"}},{"id":8,"title":{"ar":"\u0641\u0644\u0645\u0627 \u062d\u0643\u0645.","en":"Laborum."},"slug":{"ar":"flma-hkm","en":"laborum"}},{"id":7,"title":{"ar":"\u0627\u0644\u062d\u0648\u0627\u062f\u062b\u060c.","en":"Saepe."},"slug":{"ar":"alhoadth","en":"saepe"}},{"id":6,"title":{"ar":"\u0646\u0648\u0639 \u064a\u0634\u0628\u0647.","en":"Occaecati."},"slug":{"ar":"noaa-yshbh","en":"occaecati"}}],"links":{"first":"http:\/\/localhost\/api\/admin\/blog-categories?page=1","last":"http:\/\/localhost\/api\/admin\/blog-categories?page=2","prev":null,"next":"http:\/\/localhost\/api\/admin\/blog-categories?page=2"},"meta":{"current_page":1,"from":1,"last_page":2,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/admin\/blog-categories?page=1","label":"1","active":true},{"url":"http:\/\/localhost\/api\/admin\/blog-categories?page=2","label":"2","active":false},{"url":"http:\/\/localhost\/api\/admin\/blog-categories?page=2","label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/admin\/blog-categories","per_page":15,"to":15,"total":20},"success":true,"total":true,"errors":null}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/blog-categories
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Blog Category Management'
      subgroupDescription: 'APIs for managing Blog Categories'
      title: 'Store Blog Category.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the Blog Category.'
        required: true
        example:
          en: Historical
          ar: تاريخي
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title:
        en: Historical
        ar: تاريخي
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/blog-categories/{id}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Blog Category Management'
      subgroupDescription: 'APIs for managing Blog Categories'
      title: 'Get Blog Category by slug.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the blog category.'
        required: true
        example: aperiam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      slug:
        name: slug
        description: 'The slug of the Blog category'
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: aperiam
      slug: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"title":{"ar":"\u0625\u0630\u0627 \u0623\u062e\u0630\u062a.","en":"Aperiam."},"slug":{"ar":"atha-akhtht","en":"aperiam"}},"success":true,"errors":null}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/blog-categories/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Blog Category Management'
      subgroupDescription: 'APIs for managing Blog Categories'
      title: 'Update Blog Category.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the Blog category'
        required: true
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: 19
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the Blog Category.'
        required: true
        example:
          en: Historical
          ar: تاريخي
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title:
        en: Historical
        ar: تاريخي
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/blog-categories/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Blog Category Management'
      subgroupDescription: 'APIs for managing Blog Categories'
      title: 'Delete Blog Category.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the Blog category'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/contact-requests
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Contact requests Management'
      subgroupDescription: 'APIs for managing Contact requests'
      title: 'Get all Contact requests.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      page:
        name: page
        description: 'The page number'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      perPage:
        name: perPage
        description: 'Number of items pre page'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      page: 1
      perPage: 3
    queryParameters:
      'filter[fullname]':
        name: 'filter[fullname]'
        description: 'filter Contact requests by fullname.'
        required: false
        example: cumque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[mobile]':
        name: 'filter[mobile]'
        description: 'filter Contact requests by mobile.'
        required: false
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[email]':
        name: 'filter[email]'
        description: 'filter Contact requests by email.'
        required: false
        example: natus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      'filter[fullname]': cumque
      'filter[mobile]': voluptas
      'filter[email]': natus
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"http:\/\/localhost\/api\/admin\/contact-requests?page=1","last":"http:\/\/localhost\/api\/admin\/contact-requests?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/admin\/contact-requests?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/admin\/contact-requests","per_page":15,"to":null,"total":0},"success":true,"total":false,"errors":null}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/contact-requests/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Contact requests Management'
      subgroupDescription: 'APIs for managing Contact requests'
      title: 'Get Contact request by slug.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the Contact request'
        required: true
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: 11
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\ContactRequest] 11"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/contact-requests/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Contact requests Management'
      subgroupDescription: 'APIs for managing Contact requests'
      title: 'Delete Contact request.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the Contact request'
        required: true
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: 14
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/service-requests
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Service requests Management'
      subgroupDescription: 'APIs for managing Service requests.'
      title: 'Get all Service requests.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      page:
        name: page
        description: 'The page number'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      perPage:
        name: perPage
        description: 'Number of items pre page'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      page: 1
      perPage: 3
    queryParameters:
      'filter[fullname]':
        name: 'filter[fullname]'
        description: 'filter Service requests by fullname.'
        required: false
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[mobile]':
        name: 'filter[mobile]'
        description: 'filter Service requests by fullname.'
        required: false
        example: dolores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[email]':
        name: 'filter[email]'
        description: 'filter Service requests by fullname.'
        required: false
        example: explicabo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'include[documents]':
        name: 'include[documents]'
        description: 'include documents with the service requests.'
        required: false
        example:
          - magni
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      'filter[fullname]': dolorem
      'filter[mobile]': dolores
      'filter[email]': explicabo
      'include[documents]':
        - magni
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"http:\/\/localhost\/api\/admin\/service-requests?page=1","last":"http:\/\/localhost\/api\/admin\/service-requests?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/admin\/service-requests?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/admin\/service-requests","per_page":15,"to":null,"total":0},"success":true,"total":false,"errors":null}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/service-requests/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Service requests Management'
      subgroupDescription: 'APIs for managing Service requests.'
      title: 'Get Service request by slug.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the Service request.'
        required: true
        example: doloremque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: doloremque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\ServiceRequest] doloremque"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/service-requests/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Service requests Management'
      subgroupDescription: 'APIs for managing Service requests.'
      title: 'Deelete Service request.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the Service request.'
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: aut
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/represented-authors
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Represented Author Management'
      subgroupDescription: 'APIs for managing Authors'
      title: 'Get all Represented Authors.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      'filter[name]':
        name: 'filter[name]'
        description: 'filter Authors by name.'
        required: false
        example: rem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      page:
        name: page
        description: 'The page number'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      perPage:
        name: perPage
        description: 'Number of items pre page'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      'filter[name]': rem
      page: 1
      perPage: 3
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":20,"name":{"ar":"\u0633\u0647\u0645 \u0627\u0644\u0635\u0642\u064a\u0647","en":"Repellat."},"about":{"ar":"\u0627\u0644\u0645\u0634\u0627\u0647\u062f\u0629 \u064a\u0639\u0642\u0644 \u0630\u0627\u062a\u0647 \u0648\u064a\u0644\u062a\u0641\u062a \u0625\u0644\u064a\u0647 \u062d\u0633\u0628\u0645\u0627 \u064a\u062a\u0628\u064a\u0646 \u0628\u0639\u062f \u0647\u0630\u0627. \u0648\u0627\u0645\u0627 \u0627\u0644\u062a\u0634\u0628\u0647 \u0627\u0644\u062b\u0627\u0644\u062b\u060c \u0648\u0623\u0646\u0647 \u0644\u0627 \u064a\u0633\u0643\u0646 \u0625\u0644\u0627 \u0625\u0630\u0627 \u0645\u0646\u0639\u0647.","en":"Labore assumenda doloremque accusantium qui. Quas ex animi fugiat ut nesciunt."},"slug":{"ar":"shm-alskyh","en":"repellat"},"avatar":"https:\/\/via.placeholder.com\/640x480.png\/006677?text=consequuntur"},{"id":19,"name":{"ar":"\u064a\u0633\u0631\u0649 \u0627\u0644\u0634\u0647\u064a\u0644","en":"Qui ut et."},"about":{"ar":"\u0627\u0644\u0641\u0644\u0643 \u0628\u062c\u0645\u0644\u062a\u0647 \u0648\u0645\u0627 \u064a\u062d\u062a\u0648\u064a \u0639\u0644\u064a\u0647\u060c \u0643\u0634\u064a\u0621 \u0648\u0627\u062d\u062f \u0645\u062a\u0635\u0644 \u0628\u0639\u0636\u0647 \u0628\u0628\u0639\u0636\u060c \u0648\u0623\u0646 \u062c\u0645\u064a\u0639 \u0627\u0644\u0623\u062c\u0633\u0627\u0645 \u0627\u0644\u062a\u064a \u0644\u0627 \u0628\u0642\u0627\u0621 \u0644\u0644\u0631\u0648\u062d.","en":"Tempora et fugiat dolores quasi omnis voluptas. Tempora expedita et earum illo."},"slug":{"ar":"ysr-alshhyl","en":"qui-ut-et"},"avatar":"https:\/\/via.placeholder.com\/640x480.png\/000000?text=exercitationem"},{"id":18,"name":{"ar":"\u0633\u0644\u0633\u0628\u064a\u0644 \u0627\u0644\u062e\u0636\u064a\u0631\u064a","en":"Debitis."},"about":{"ar":"\u0648\u0631\u0627\u0626\u0647\u0627\u060c \u0648\u0628\u0647\u062c\u0629 \u0648\u0633\u0631\u0648\u0631 \u0644\u0627 \u0646\u0647\u0627\u064a\u0629 \u0648\u0643\u0630\u0644\u0643 \u0623\u064a\u0636\u0627\u064b \u0645\u0646 \u0627\u0644\u062d\u064a\u0648\u0627\u0646 \u0622\u0648 \u0645\u0646 \u0628\u064a\u0636\u0647\u060c \u0648\u0627\u0644\u0634\u0631\u0637 \u0639\u0644\u064a\u0647 \u0641\u064a \u0627\u0644\u062a\u0634\u0628\u0647 \u0627\u0644\u062b\u0627\u0646\u064a\u060c \u0648\u0627\u0646.","en":"Qui enim totam nihil. Temporibus sequi eaque dolor error. Laboriosam ut iste amet corporis."},"slug":{"ar":"slsbyl-alkhdyry","en":"debitis"},"avatar":"https:\/\/via.placeholder.com\/640x480.png\/00ee55?text=sunt"}],"links":{"first":"http:\/\/localhost\/api\/admin\/represented-authors?page=1","last":"http:\/\/localhost\/api\/admin\/represented-authors?page=7","prev":null,"next":"http:\/\/localhost\/api\/admin\/represented-authors?page=2"},"meta":{"current_page":1,"from":1,"last_page":7,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/admin\/represented-authors?page=1","label":"1","active":true},{"url":"http:\/\/localhost\/api\/admin\/represented-authors?page=2","label":"2","active":false},{"url":"http:\/\/localhost\/api\/admin\/represented-authors?page=3","label":"3","active":false},{"url":"http:\/\/localhost\/api\/admin\/represented-authors?page=4","label":"4","active":false},{"url":"http:\/\/localhost\/api\/admin\/represented-authors?page=5","label":"5","active":false},{"url":"http:\/\/localhost\/api\/admin\/represented-authors?page=6","label":"6","active":false},{"url":"http:\/\/localhost\/api\/admin\/represented-authors?page=7","label":"7","active":false},{"url":"http:\/\/localhost\/api\/admin\/represented-authors?page=2","label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/admin\/represented-authors","per_page":3,"to":3,"total":20},"success":true,"total":true,"errors":null}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/represented-authors
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Represented Author Management'
      subgroupDescription: 'APIs for managing Authors'
      title: 'Store Represented Author.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the Author.'
        required: true
        example:
          en: Ahmad
          ar: أحمد
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      about:
        name: about
        description: 'The about of the Author.'
        required: true
        example:
          en: 'about the author'
          ar: 'حول المؤلف'
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      avatar:
        name: avatar
        description: 'The avatar of the Author.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name:
        en: Ahmad
        ar: أحمد
      about:
        en: 'about the author'
        ar: 'حول المؤلف'
    fileParameters:
      avatar: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/represented-authors/{id}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Represented Author Management'
      subgroupDescription: 'APIs for managing Authors'
      title: 'Get Represented Author by slug.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the represented author.'
        required: true
        example: eveniet
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      slug:
        name: slug
        description: 'The slug of the Author'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: eveniet
      slug: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"name":{"ar":"\u0646\u062c\u0627\u0629 \u0639\u0632\u0627\u0645 \u0647\u0627\u0634\u0645 \u0627\u0644\u0641\u0631\u064a\u062f\u064a","en":"Eveniet."},"about":{"ar":"\u0647\u0630\u0627 \u0627\u0644\u0645\u062d\u0631\u0643 \u0627\u0644\u0628\u0631\u064a\u0621 \u0639\u0646 \u0627\u0644\u0645\u0627\u062f\u0629\u060c \u0648\u0639\u0646 \u0635\u0641\u0627\u062a \u0627\u0644\u0623\u062c\u0633\u0627\u0645\u060c \u0648\u062a\u0644\u0643 \u0627\u0644\u0630\u0648\u0627\u062a \u0627\u0644\u0645\u0641\u0627\u0631\u0642\u0629 \u0625\u0646 \u0643\u0627\u0646\u062a \u0644\u0645 \u062a\u062f\u0631\u0643 \u0642\u0637 \u0628\u0627\u0644\u0641\u0639\u0644\u060c \u0641\u0647\u064a.","en":"Quia sed quia ad beatae et minus hic. Officia dolorum exercitationem fuga eos est numquam."},"slug":{"ar":"nga-aazam-hashm-alfrydy","en":"eveniet"},"avatar":"https:\/\/via.placeholder.com\/640x480.png\/004477?text=officia"},"success":true,"errors":null}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/represented-authors/{id}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Represented Author Management'
      subgroupDescription: 'APIs for managing Authors'
      title: 'Update Represented Author.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the Author'
        required: true
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 8
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the Author.'
        required: true
        example:
          en: Ahmad
          ar: أحمد
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      about:
        name: about
        description: 'The about of the Author.'
        required: true
        example:
          en: 'about the author'
          ar: 'حول المؤلف'
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      avatar:
        name: avatar
        description: 'The avatar of the Author.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name:
        en: Ahmad
        ar: أحمد
      about:
        en: 'about the author'
        ar: 'حول المؤلف'
    fileParameters:
      avatar: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/represented-authors/{id}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Represented Author Management'
      subgroupDescription: 'APIs for managing Authors'
      title: 'Delete Represented Author.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the Author.'
        required: true
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 14
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/partners
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Partner Management'
      subgroupDescription: 'APIs for managing Partners'
      title: 'Get all Partners.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      'filter[name]':
        name: 'filter[name]'
        description: 'filter Partners by name.'
        required: false
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[website_link]':
        name: 'filter[website_link]'
        description: 'filter Partners by website link.'
        required: false
        example: necessitatibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      page:
        name: page
        description: 'The page number'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      perPage:
        name: perPage
        description: 'Number of items pre page'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      'filter[name]': rerum
      'filter[website_link]': necessitatibus
      page: 1
      perPage: 3
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":10,"name":{"ar":"\u0648\u0634\u0627\u0647\u062f \u0645\u0627.","en":"Rerum."},"slug":{"ar":"oshahd-ma","en":"rerum"},"avatar":"https:\/\/via.placeholder.com\/640x480.png\/00aa44?text=praesentium","website_link":"https:\/\/grant.biz\/quia-error-cum-ratione-voluptates-quas.html"},{"id":9,"name":{"ar":"\u0648\u0646\u062d\u0646 \u0646\u062c\u062f.","en":"Assumenda."},"slug":{"ar":"onhn-ngd","en":"assumenda"},"avatar":"https:\/\/via.placeholder.com\/640x480.png\/004455?text=magni","website_link":"http:\/\/huel.com\/eum-iure-recusandae-tempora-voluptatum-earum-qui.html"},{"id":8,"name":{"ar":"\u0648\u0628\u062d\u0633\u0628 \u0645\u0627.","en":"Aut non."},"slug":{"ar":"obhsb-ma","en":"aut-non"},"avatar":"https:\/\/via.placeholder.com\/640x480.png\/00ccaa?text=doloremque","website_link":"http:\/\/www.vandervort.net\/voluptatem-illo-impedit-quisquam-rerum"}],"links":{"first":"http:\/\/localhost\/api\/admin\/partners?page=1","last":"http:\/\/localhost\/api\/admin\/partners?page=4","prev":null,"next":"http:\/\/localhost\/api\/admin\/partners?page=2"},"meta":{"current_page":1,"from":1,"last_page":4,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/admin\/partners?page=1","label":"1","active":true},{"url":"http:\/\/localhost\/api\/admin\/partners?page=2","label":"2","active":false},{"url":"http:\/\/localhost\/api\/admin\/partners?page=3","label":"3","active":false},{"url":"http:\/\/localhost\/api\/admin\/partners?page=4","label":"4","active":false},{"url":"http:\/\/localhost\/api\/admin\/partners?page=2","label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/admin\/partners","per_page":3,"to":3,"total":10},"success":true,"total":true,"errors":null}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/partners
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Partner Management'
      subgroupDescription: 'APIs for managing Partners'
      title: 'Store Partner.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the Partner.'
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      avatar:
        name: avatar
        description: 'The avatar of the Partner.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      website_link:
        name: website_link
        description: 'Must be a valid URL.'
        required: true
        example: 'http://halvorson.com/sed-repudiandae-a-voluptatibus-omnis-tenetur'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      website_lonk:
        name: website_lonk
        description: 'The website_lonk of the Partner.'
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: quia
      website_link: 'http://halvorson.com/sed-repudiandae-a-voluptatibus-omnis-tenetur'
      website_lonk: voluptatem
    fileParameters:
      avatar: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/partners/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Partner Management'
      subgroupDescription: 'APIs for managing Partners'
      title: 'Get Partner by slug.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the Partner'
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: rerum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":10,"name":{"ar":"\u0648\u0634\u0627\u0647\u062f \u0645\u0627.","en":"Rerum."},"slug":{"ar":"oshahd-ma","en":"rerum"},"avatar":"https:\/\/via.placeholder.com\/640x480.png\/00aa44?text=praesentium","website_link":"https:\/\/grant.biz\/quia-error-cum-ratione-voluptates-quas.html"},"success":true,"errors":null}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/partners/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Partner Management'
      subgroupDescription: 'APIs for managing Partners'
      title: 'Update Partner.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the partner.'
        required: true
        example: quaerat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: quaerat
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the Partner.'
        required: true
        example: impedit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      avatar:
        name: avatar
        description: 'The avatar of the Partner.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      website_link:
        name: website_link
        description: 'Must be a valid URL.'
        required: true
        example: 'http://www.kreiger.com/quam-omnis-perspiciatis-adipisci-nihil-porro-sed-voluptatem-sequi'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      website_lonk:
        name: website_lonk
        description: 'The website_lonk of the Partner.'
        required: true
        example: commodi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: impedit
      website_link: 'http://www.kreiger.com/quam-omnis-perspiciatis-adipisci-nihil-porro-sed-voluptatem-sequi'
      website_lonk: commodi
    fileParameters:
      avatar: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/partners/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'Partner Management'
      subgroupDescription: 'APIs for managing Partners'
      title: 'Delete Partner.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the Partner'
        required: true
        example: odit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: odit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/users
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'User Management'
      subgroupDescription: 'APIs for managing Users.'
      title: 'Get all Users.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      page:
        name: page
        description: 'The page number'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      perPage:
        name: perPage
        description: 'Number of items pre page'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      page: 1
      perPage: 3
    queryParameters:
      'filter[first_name]':
        name: 'filter[first_name]'
        description: 'filter Users by first_name.'
        required: false
        example: corporis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[last_name]':
        name: 'filter[last_name]'
        description: 'filter Users by last_name.'
        required: false
        example: molestiae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[username]':
        name: 'filter[username]'
        description: 'filter Users by username.'
        required: false
        example: incidunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'include[roles]':
        name: 'include[roles]'
        description: 'include roles with the users.'
        required: false
        example:
          - dignissimos
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      'filter[first_name]': corporis
      'filter[last_name]': molestiae
      'filter[username]': incidunt
      'include[roles]':
        - dignissimos
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":6,"first_name":"books admin","last_name":"books admin","slug":"books-admin","username":"books admin","is_deletable":true},{"id":5,"first_name":"blogs admin","last_name":"blogs admin","slug":"blogs-admin","username":"blogs_admin","is_deletable":true},{"id":4,"first_name":"authors admin","last_name":"authors admin","slug":"authors-admin","username":"authors_admin","is_deletable":true},{"id":3,"first_name":"contacts admin","last_name":"contacts admin","slug":"contacts-admin","username":"contacts_admin","is_deletable":true}],"links":{"first":"http:\/\/localhost\/api\/admin\/users?page=1","last":"http:\/\/localhost\/api\/admin\/users?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/admin\/users?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/admin\/users","per_page":15,"to":4,"total":4},"success":true,"total":true,"errors":null}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/users
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'User Management'
      subgroupDescription: 'APIs for managing Users.'
      title: 'Store User.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'The first_name of the User.'
        required: true
        example: nostrum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      last_name:
        name: last_name
        description: 'The last_name of the User.'
        required: true
        example: facere
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      username:
        name: username
        description: 'The username of the User.'
        required: true
        example: sunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'The password of the User.'
        required: true
        example: 'HX{FnzP4&.(R(B:'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      roles:
        name: roles
        description: 'The roles of the User.'
        required: true
        example:
          - non
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'roles[].id':
        name: 'roles[].id'
        description: ''
        required: true
        example: '4'
        type: integer
        enumValues:
          - '4'
          - '5'
          - '6'
          - '3'
          - '2'
        exampleWasSpecified: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The password Confirmation.'
        required: true
        example: laborum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      first_name: nostrum
      last_name: facere
      username: sunt
      password: 'HX{FnzP4&.(R(B:'
      roles:
        - non
      password_confirmation: laborum
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/users/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'User Management'
      subgroupDescription: 'APIs for managing Users.'
      title: 'Get User by slug.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the User.'
        required: true
        example: assumenda
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: assumenda
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\User] assumenda"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/users/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'User Management'
      subgroupDescription: 'APIs for managing Users.'
      title: 'Update User.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the User.'
        required: true
        example: amet
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: amet
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'The first_name of the User.'
        required: true
        example: quam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      last_name:
        name: last_name
        description: 'The last_name of the User.'
        required: true
        example: non
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      username:
        name: username
        description: 'The username of the User.'
        required: true
        example: nobis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'The password of the User.'
        required: true
        example: 'fWr:`;+a+ziE{pQ3lO'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      roles:
        name: roles
        description: 'The roles of the User.'
        required: true
        example:
          - modi
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'roles[].id':
        name: 'roles[].id'
        description: ''
        required: true
        example: '2'
        type: integer
        enumValues:
          - '4'
          - '5'
          - '6'
          - '3'
          - '2'
        exampleWasSpecified: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The password Confirmation.'
        required: true
        example: quis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      first_name: quam
      last_name: non
      username: nobis
      password: 'fWr:`;+a+ziE{pQ3lO'
      roles:
        - modi
      password_confirmation: quis
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/users/{slug}'
    metadata:
      groupName: 'Admin Endpoints'
      groupDescription: ''
      subgroup: 'User Management'
      subgroupDescription: 'APIs for managing Users.'
      title: 'Delete User.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the User.'
        required: true
        example: non
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      slug: non
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
